{"version":3,"sources":["components/Uuid.js","components/AppForm.js","App.js","reportWebVitals.js","index.js"],"names":["uuidv4","replace","c","r","Math","random","toString","App","props","onChangeHandler","e","setState","text","target","value","submitHandler","preventDefault","arrayItem","state","id","uuid","items","concat","deleteItem","key","todos","filter","todo","bind","onSubmit","this","type","onChange","map","item","className","onClick","Component","AppForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PASiBA,MARjB,WACI,MAAO,uCAAuCC,QAAQ,SAAS,SAAUC,GACvE,IAAIC,EAAqB,GAAhBC,KAAKC,SAAiB,EAE/B,OADY,MAANH,EAAYC,EAAS,EAAJA,EAAW,GACzBG,SAAS,Q,OCmETC,E,kDAnEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZC,KAAMF,EAAEG,OAAOC,SAZA,EAiBnBC,cAAgB,SAACL,GACfA,EAAEM,iBAEF,IAAMC,EAAY,CAChBL,KAAM,EAAKM,MAAMN,KACjBO,GAAIC,KAGN,EAAKT,UAAS,SAACO,GAAD,MAAY,CACxBG,MAAOH,EAAMG,MAAMC,OAAOL,GAC1BL,KAAM,QA3BS,EA8BnBW,WAAa,SAACC,GACZ,IAAIC,EAAQ,EAAKP,MAAMG,MAAMK,QAAO,SAACC,GAAD,OAAUH,IAAQG,EAAKR,MAC3D,EAAKR,SAAS,CACZU,MAAOI,KA9BT,EAAKP,MAAQ,CAAEG,MAAO,GAAIT,KAAM,IAChC,EAAKH,gBAAkB,EAAKA,gBAAgBmB,KAArB,gBACvB,EAAKb,cAAgB,EAAKA,cAAca,KAAnB,gBALJ,E,0CAqCnB,WAAU,IAAD,OACP,OACE,qCACE,0CAEA,uBAAMC,SAAUC,KAAKf,cAArB,UACE,kEACA,uBACEgB,KAAK,OACLC,SAAUF,KAAKrB,gBACfK,MAAOgB,KAAKZ,MAAMN,UAItB,6BACGkB,KAAKZ,MAAMG,MAAMY,KAAI,SAACC,GACrB,OACE,+BACE,kCAAKA,EAAKtB,QAEV,mBAAGuB,UAAU,aAAaC,QAAS,kBAAM,EAAKb,WAAWW,EAAKf,KAA9D,mBAHOe,EAAKf,gB,GAvDVkB,aCQH9B,MARf,WACE,OACE,qBAAK4B,UAAU,MAAf,SACE,cAACG,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0ae96ad.chunk.js","sourcesContent":["// UNIQUE KEY GENERATOR\r\nfunction uuidv4() {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n      var r = (Math.random() * 16) | 0,\r\n        v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  \r\n  export default uuidv4;\r\n","import React, { Component } from \"react\";\r\nimport uuid from \"./Uuid\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { items: [], text: \"\" };\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n  }\r\n\r\n  //setting input value to the text in state\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n  //pushing text item of the state to the items\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const arrayItem = {\r\n      text: this.state.text,\r\n      id: uuid()\r\n    };\r\n\r\n    this.setState((state) => ({\r\n      items: state.items.concat(arrayItem),\r\n      text: \"\"\r\n    }));\r\n  };\r\n  deleteItem = (key) => {\r\n    let todos = this.state.items.filter((todo) => key !== todo.id);\r\n    this.setState({\r\n      items: todos\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>toDo App</h1>\r\n\r\n        <form onSubmit={this.submitHandler}>\r\n          <label>Type the task you want to do!</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onChangeHandler}\r\n            value={this.state.text}\r\n          />\r\n        </form>\r\n\r\n        <ul>\r\n          {this.state.items.map((item) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <p> {item.text}</p>\r\n               \r\n                <p className=\"delete-btn\" onClick={() => this.deleteItem(item.id)}> X </p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","\nimport './App.scss';\nimport AppForm from './components/AppForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}